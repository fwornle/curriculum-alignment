{
  "name": "curriculum-alignment",
  "version": "1.0.0",
  "description": "Multi-Agent Curriculum Alignment System (MACAS) for Central European University (CEU)",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:lambda\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:lambda": "sam local start-api",
    "build": "npm run build:frontend && npm run build:lambda",
    "build:frontend": "cd frontend && npm run build",
    "build:lambda": "sam build",
    "test": "npm run test:frontend && npm run test:lambda",
    "test:frontend": "cd frontend && npm run test",
    "test:lambda": "jest",
    "test:e2e": "cd tests/e2e && npm run test",
    "lint": "npm run lint:frontend && npm run lint:lambda",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:lambda": "eslint lambda/**/*.ts",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "typecheck": "tsc --noEmit",
    "deploy:dev": "sam deploy --config-env dev",
    "deploy:prod": "sam deploy --config-env prod",
    "install:all": "npm install && cd frontend && npm install",
    "clean": "rm -rf node_modules frontend/node_modules .aws-sam dist",
    "prepare": "husky install",
    "db:setup": "ts-node scripts/setup-database.sh",
    "db:test": "ts-node scripts/test-database.ts",
    "db:health": "ts-node scripts/test-database.ts",
    "qdrant:init": "ts-node scripts/init-qdrant.ts",
    "qdrant:health": "ts-node scripts/init-qdrant.ts",
    "sam:build": "sam build",
    "sam:deploy:dev": "sam deploy --config-env dev",
    "sam:deploy:staging": "sam deploy --config-env staging",
    "sam:deploy:prod": "sam deploy --config-env prod",
    "sam:local": "sam local start-api --config-env dev",
    "sam:validate": "sam validate",
    "sam:logs": "sam logs -n CoordinatorFunction --stack-name curriculum-alignment-dev --tail",
    "s3:setup": "./scripts/setup-s3.sh setup",
    "s3:test": "./scripts/setup-s3.sh test",
    "s3:info": "./scripts/setup-s3.sh info",
    "s3:cleanup": "./scripts/setup-s3.sh cleanup",
    "s3:config": "ts-node scripts/s3-utils.ts config",
    "s3:health": "ts-node scripts/s3-utils.ts health",
    "s3:metrics": "ts-node scripts/s3-utils.ts metrics",
    "s3:list": "ts-node scripts/s3-utils.ts list",
    "s3:upload": "ts-node scripts/s3-utils.ts upload",
    "s3:url": "ts-node scripts/s3-utils.ts url",
    "cloudfront:setup": "./scripts/setup-cloudfront.sh setup",
    "cloudfront:test": "./scripts/setup-cloudfront.sh test",
    "cloudfront:info": "./scripts/setup-cloudfront.sh info",
    "cloudfront:invalidate": "./scripts/setup-cloudfront.sh invalidate",
    "cloudfront:monitor": "./scripts/setup-cloudfront.sh monitor",
    "cognito:setup": "./scripts/setup-cognito.sh setup",
    "cognito:test": "./scripts/setup-cognito.sh test",
    "cognito:info": "./scripts/setup-cognito.sh info",
    "cognito:users": "./scripts/setup-cognito.sh users",
    "cognito:monitor": "./scripts/setup-cognito.sh monitor",
    "api:setup": "./scripts/setup-api-gateway.sh setup",
    "api:test": "./scripts/setup-api-gateway.sh test",
    "api:info": "./scripts/setup-api-gateway.sh info",
    "api:docs": "./scripts/setup-api-gateway.sh docs",
    "api:permissions": "./scripts/setup-api-gateway.sh permissions",
    "api:monitor": "./scripts/setup-api-gateway.sh monitor",
    "migrate:up": "cd database && npm run migrate:up",
    "migrate:down": "cd database && npm run migrate:down",
    "seed": "cd database && npm run seed"
  },
  "keywords": [
    "curriculum",
    "alignment",
    "multi-agent",
    "serverless",
    "aws",
    "lambda",
    "education",
    "ceu",
    "analysis",
    "semantic-search"
  ],
  "author": "CEU IT Services <curriculum-alignment@ceu.edu>",
  "license": "PROPRIETARY",
  "repository": {
    "type": "git",
    "url": "git@github.com:fwornle/curriculum-alignment.git"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.130",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.6",
    "@typescript-eslint/eslint-plugin": "^6.17.0",
    "@typescript-eslint/parser": "^6.17.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.2",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.1",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "aws-lambda": "^1.0.7",
    "aws-sdk": "^2.1528.0",
    "@aws-sdk/client-cognito-identity": "^3.490.0",
    "@aws-sdk/client-cognito-identity-provider": "^3.490.0",
    "dotenv": "^16.3.1",
    "pg": "^8.11.3",
    "@supabase/supabase-js": "^2.38.5",
    "@types/pg": "^8.10.9",
    "@qdrant/js-client-rest": "^1.8.2"
  },
  "workspaces": [
    "frontend",
    "lambda/*",
    "database",
    "tests/*"
  ],
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  }
}