{"version":3,"file":"index-DvdD31NE.js","sources":["../../../node_modules/@aws-amplify/core/dist/esm/utils/generateRandomString.mjs","../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeDecode.mjs","../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeEncode.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/Errors.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/createOAuthError.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/types/Auth.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/validateState.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/completeOAuthFlow.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/handleFailure.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/enableOAuthListener.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/types/models.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/generateCodeVerifier.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/generateState.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/cancelOAuthFlow.mjs","../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithRedirect.mjs"],"sourcesContent":["import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateRandomString = (length) => {\n    const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const result = [];\n    const randomNums = new Uint8Array(length);\n    getCrypto().getRandomValues(randomNums);\n    for (const num of randomNums) {\n        result.push(STATE_CHARSET[num % STATE_CHARSET.length]);\n    }\n    return result.join('');\n};\n\nexport { generateRandomString };\n//# sourceMappingURL=generateRandomString.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeDecode(hex) {\n    const matchArr = hex.match(/.{2}/g) || [];\n    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\n\nexport { urlSafeDecode };\n//# sourceMappingURL=urlSafeDecode.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeEncode(str) {\n    return str\n        .split('')\n        .map(char => char.charCodeAt(0).toString(16).padStart(2, '0'))\n        .join('');\n}\n\nexport { urlSafeEncode };\n//# sourceMappingURL=urlSafeEncode.mjs.map\n","import { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nconst logger = new ConsoleLogger('AuthError');\nclass AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nclass NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nconst authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n\nexport { AuthError, NoUserPoolError, authErrorMessages };\n//# sourceMappingURL=Errors.mjs.map\n","import { authErrorMessages } from '../../../../Errors.mjs';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n\nexport { createOAuthError };\n//# sourceMappingURL=createOAuthError.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n\nexport { AuthErrorTypes };\n//# sourceMappingURL=Auth.mjs.map\n","import { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthErrorTypes } from '../../../../types/Auth.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nconst validationFailedMessage = 'An error occurred while validating the state.';\nconst validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nconst validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n\nexport { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };\n//# sourceMappingURL=validateState.mjs.map\n","import { AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { decodeJWT, Hub } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent.mjs';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\nimport { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\nimport { createOAuthError } from './createOAuthError.mjs';\nimport { validateState } from './validateState.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token: refreshToken, id_token, error, error_message: errorMessage, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(errorMessage ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refreshToken});\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token});\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await tokenOrchestrator.setOAuthMetadata({\n        oauthSignIn: true,\n    });\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    // clear history before sending out final Hub events\n    clearHistory(redirectUri);\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n\nexport { completeOAuthFlow };\n//# sourceMappingURL=completeOAuthFlow.mjs.map\n","import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nexport { handleFailure };\n//# sourceMappingURL=handleFailure.mjs.map\n","import { assertTokenProviderConfig, assertOAuthConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { completeOAuthFlow } from './completeOAuthFlow.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n\nexport { attemptCompleteOAuthFlow };\n//# sourceMappingURL=attemptCompleteOAuthFlow.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { isBrowser, ADD_OAUTH_LISTENER } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n//# sourceMappingURL=enableOAuthListener.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoHostedUIIdentityProviderMap = {\n    Google: 'Google',\n    Facebook: 'Facebook',\n    Amazon: 'LoginWithAmazon',\n    Apple: 'SignInWithApple',\n};\n\nexport { cognitoHostedUIIdentityProviderMap };\n//# sourceMappingURL=models.mjs.map\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getCrypto, base64Encoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst CODE_VERIFIER_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n/**\n *\n * @param length Desired length of the code verifier.\n *\n * **NOTE:** According to the [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1)\n * A code verifier must be with a length >= 43 and <= 128.\n *\n * @returns An object that contains the generated `codeVerifier` and a method\n * `toCodeChallenge` to generate the code challenge from the `codeVerifier`\n * following the spec of [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.2).\n */\nconst generateCodeVerifier = (length) => {\n    const randomBytes = new Uint8Array(length);\n    getCrypto().getRandomValues(randomBytes);\n    let value = '';\n    let codeChallenge;\n    for (const byte of randomBytes) {\n        value += CODE_VERIFIER_CHARSET.charAt(byte % CODE_VERIFIER_CHARSET.length);\n    }\n    return {\n        value,\n        method: 'S256',\n        toCodeChallenge() {\n            if (codeChallenge) {\n                return codeChallenge;\n            }\n            codeChallenge = generateCodeChallenge(value);\n            return codeChallenge;\n        },\n    };\n};\nfunction generateCodeChallenge(codeVerifier) {\n    const awsCryptoHash = new Sha256();\n    awsCryptoHash.update(codeVerifier);\n    const codeChallenge = removePaddingChar(base64Encoder.convert(awsCryptoHash.digestSync(), { urlSafe: true }));\n    return codeChallenge;\n}\nfunction removePaddingChar(base64Encoded) {\n    return base64Encoded.replace(/=/g, '');\n}\n\nexport { generateCodeVerifier };\n//# sourceMappingURL=generateCodeVerifier.mjs.map\n","import { generateRandomString } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateState = () => {\n    return generateRandomString(32);\n};\n\nexport { generateState };\n//# sourceMappingURL=generateState.mjs.map\n","import { createOAuthError } from './createOAuthError.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst listenForOAuthFlowCancellation = (store) => {\n    async function handleCancelOAuthFlow(event) {\n        const isBfcache = event.persisted;\n        if (isBfcache && (await store.loadOAuthInFlight())) {\n            const error = createOAuthError('User cancelled OAuth flow.');\n            await handleFailure(error);\n        }\n        window.removeEventListener('pageshow', handleCancelOAuthFlow);\n    }\n    window.addEventListener('pageshow', handleCancelOAuthFlow);\n};\n\nexport { listenForOAuthFlowCancellation };\n//# sourceMappingURL=cancelOAuthFlow.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, urlSafeEncode, isBrowser, AuthAction } from '@aws-amplify/core/internals/utils';\nimport '../utils/oauth/enableOAuthListener.mjs';\nimport { cognitoHostedUIIdentityProviderMap } from '../types/models.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { openAuthSession } from '../../../utils/openAuthSession.mjs';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\nimport { generateCodeVerifier } from '../utils/oauth/generateCodeVerifier.mjs';\nimport { generateState } from '../utils/oauth/generateState.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport '../tokenProvider/tokenProvider.mjs';\nimport { getRedirectUrl } from '../utils/oauth/getRedirectUrl.mjs';\nimport { handleFailure } from '../utils/oauth/handleFailure.mjs';\nimport { completeOAuthFlow } from '../utils/oauth/completeOAuthFlow.mjs';\nimport '../../../types/Auth.mjs';\nimport { createOAuthError } from '../utils/oauth/createOAuthError.mjs';\nimport { listenForOAuthFlowCancellation } from '../utils/oauth/cancelOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n *\n * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n *\n * @throws AuthTokenConfigException - Thrown when the user pool config is invalid.\n * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n */\nasync function signInWithRedirect(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    oAuthStore.setAuthConfig(authConfig);\n    if (!input?.options?.prompt) {\n        await assertUserNotAuthenticated();\n    }\n    let provider = 'COGNITO'; // Default\n    if (typeof input?.provider === 'string') {\n        provider = cognitoHostedUIIdentityProviderMap[input.provider];\n    }\n    else if (input?.provider?.custom) {\n        provider = input.provider.custom;\n    }\n    return oauthSignIn({\n        oauthConfig: authConfig.loginWith.oauth,\n        clientId: authConfig.userPoolClientId,\n        provider,\n        customState: input?.customState,\n        preferPrivateSession: input?.options?.preferPrivateSession,\n        options: {\n            loginHint: input?.options?.loginHint,\n            lang: input?.options?.lang,\n            nonce: input?.options?.nonce,\n            prompt: input?.options?.prompt,\n        },\n        authSessionOpener: input?.options?.authSessionOpener,\n    });\n}\nconst oauthSignIn = async ({ oauthConfig, provider, clientId, customState, preferPrivateSession, options, authSessionOpener, }) => {\n    const { domain, redirectSignIn, responseType, scopes } = oauthConfig;\n    const { loginHint, lang, nonce, prompt } = options ?? {};\n    const randomState = generateState();\n    const openAuthSession$1 = authSessionOpener || openAuthSession;\n    /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n    single-encodes/decodes url on first sign in and double-encodes/decodes url\n    when user already signed in. Using encodeURIComponent, Base32, Base64 add\n    characters % or = which on further encoding becomes unsafe. '=' create issue\n    for parsing query params.\n    Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n    const state = customState\n        ? `${randomState}-${urlSafeEncode(customState)}`\n        : randomState;\n    const { value, method, toCodeChallenge } = generateCodeVerifier(128);\n    const redirectUri = getRedirectUrl(oauthConfig.redirectSignIn);\n    if (isBrowser())\n        oAuthStore.storeOAuthInFlight(true);\n    oAuthStore.storeOAuthState(state);\n    oAuthStore.storePKCE(value);\n    const params = new URLSearchParams([\n        ['redirect_uri', redirectUri],\n        ['response_type', responseType],\n        ['client_id', clientId],\n        ['identity_provider', provider],\n        ['scope', scopes.join(' ')],\n    ]);\n    loginHint && params.append('login_hint', loginHint);\n    lang && params.append('lang', lang);\n    nonce && params.append('nonce', nonce);\n    prompt && params.append('prompt', prompt.toLowerCase());\n    params.append('state', state);\n    if (responseType === 'code') {\n        params.append('code_challenge', toCodeChallenge());\n        params.append('code_challenge_method', method);\n    }\n    // Using URL object is not supported in React Native as the `search` property is read-only\n    // See: https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Blob/URL.js\n    const oAuthUrl = `https://${domain}/oauth2/authorize?${params.toString()}`;\n    // this will only take effect in the following scenarios:\n    // 1. the user cancels the OAuth flow on web via back button, and\n    // 2. when bfcache is enabled\n    listenForOAuthFlowCancellation(oAuthStore);\n    // the following is effective only in react-native as openAuthSession resolves only in react-native\n    const { type, error, url } = (await openAuthSession$1(oAuthUrl, redirectSignIn, preferPrivateSession)) ??\n        {};\n    try {\n        if (type === 'error') {\n            throw createOAuthError(String(error));\n        }\n        if (type === 'success' && url) {\n            await completeOAuthFlow({\n                currentUrl: url,\n                clientId,\n                domain,\n                redirectUri,\n                responseType,\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n                preferPrivateSession,\n            });\n        }\n    }\n    catch (err) {\n        await handleFailure(err);\n        // rethrow the error so it can be caught by `await signInWithRedirect()` in react-native\n        throw err;\n    }\n};\n\nexport { signInWithRedirect };\n//# sourceMappingURL=signInWithRedirect.mjs.map\n"],"names":["generateRandomString","length","STATE_CHARSET","result","randomNums","getCrypto","num","urlSafeDecode","hex","char","urlSafeEncode","str","ConsoleLogger","authErrorMessages","AuthErrorStrings","createOAuthError","message","recoverySuggestion","AuthError","AuthErrorCodes","AuthErrorTypes","flowCancelledMessage","validationFailedMessage","validationRecoverySuggestion","validateState","state","savedState","oAuthStore","validatedState","completeOAuthFlow","currentUrl","userAgentValue","clientId","redirectUri","responseType","domain","preferPrivateSession","urlParams","AmplifyUrl","error","errorMessage","handleCodeFlow","handleImplicitFlow","url","code","oAuthTokenEndpoint","codeVerifier","oAuthTokenBody","body","k","v","access_token","refreshToken","id_token","token_type","expires_in","USER_AGENT_HEADER","username","decodeJWT","cacheCognitoTokens","completeFlow","error_description","pairings","accum","tokenOrchestrator","resolveAndClearInflightPromises","clearHistory","isCustomState","Hub","getCustomState","AMPLIFY_SYMBOL","dispatchSignedInHubEvent","handleFailure","attemptCompleteOAuthFlow","authConfig","assertTokenProviderConfig","assertOAuthConfig","loginWith","userPoolClientId","redirectSignIn","getRedirectUrl","getAuthUserAgentValue","AuthAction","err","isBrowser","Amplify","ADD_OAUTH_LISTENER","cognitoHostedUIIdentityProviderMap","CODE_VERIFIER_CHARSET","generateCodeVerifier","randomBytes","value","codeChallenge","byte","generateCodeChallenge","awsCryptoHash","Sha256","removePaddingChar","base64Encoder","base64Encoded","generateState","listenForOAuthFlowCancellation","store","handleCancelOAuthFlow","event","signInWithRedirect","input","assertUserNotAuthenticated","provider","oauthSignIn","oauthConfig","customState","options","authSessionOpener","scopes","loginHint","lang","nonce","prompt","randomState","openAuthSession$1","openAuthSession","method","toCodeChallenge","params","oAuthUrl","type"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}