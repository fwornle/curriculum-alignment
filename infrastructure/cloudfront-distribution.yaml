AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFront CDN Distribution for Curriculum Alignment System'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Deployment environment
  
  StaticWebsiteBucketName:
    Type: String
    Description: Name of the S3 bucket for static website hosting
  
  DocumentsBucketName:
    Type: String
    Description: Name of the S3 bucket for documents
  
  DomainName:
    Type: String
    Default: ''
    Description: Custom domain name for CloudFront (optional)
  
  CertificateArn:
    Type: String
    Default: ''
    Description: ACM Certificate ARN for custom domain (optional)
  
  EnableCompression:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Enable CloudFront compression
  
  PriceClass:
    Type: String
    Default: PriceClass_100
    AllowedValues: [PriceClass_All, PriceClass_200, PriceClass_100]
    Description: CloudFront price class

Conditions:
  HasCustomDomain: !Not [!Equals [!Ref DomainName, '']]
  HasCertificate: !Not [!Equals [!Ref CertificateArn, '']]
  IsProduction: !Equals [!Ref Environment, 'prod']

Resources:
  # Origin Access Control for S3 buckets
  StaticWebsiteOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-static-website-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
        Description: 'Origin Access Control for static website bucket'

  DocumentsOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-documents-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
        Description: 'Origin Access Control for documents bucket'

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        # Origins
        Origins:
          # Static Website Origin (React App)
          - Id: StaticWebsiteOrigin
            DomainName: !Sub '${StaticWebsiteBucketName}.s3.${AWS::Region}.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !Ref StaticWebsiteOriginAccessControl
            
          # Documents Origin (API docs, curriculum files)
          - Id: DocumentsOrigin
            DomainName: !Sub '${DocumentsBucketName}.s3.${AWS::Region}.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !Ref DocumentsOriginAccessControl
            OriginPath: '/public'

        # Default Cache Behavior (React App)
        DefaultCacheBehavior:
          TargetOriginId: StaticWebsiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: !Ref ReactAppCachePolicy
          OriginRequestPolicyId: !Ref StaticWebsiteOriginRequestPolicy
          ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
          Compress: !Ref EnableCompression
          SmoothStreaming: false

        # Additional Cache Behaviors
        CacheBehaviors:
          # Static Assets (CSS, JS, Images)
          - PathPattern: '/static/*'
            TargetOriginId: StaticWebsiteOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            CachePolicyId: !Ref StaticAssetsCachePolicy
            OriginRequestPolicyId: !Ref StaticWebsiteOriginRequestPolicy
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: !Ref EnableCompression

          # API Documentation
          - PathPattern: '/docs/*'
            TargetOriginId: DocumentsOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            CachePolicyId: !Ref DocumentsCachePolicy
            OriginRequestPolicyId: !Ref DocumentsOriginRequestPolicy
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: !Ref EnableCompression

          # Service Worker
          - PathPattern: '/sw.js'
            TargetOriginId: StaticWebsiteOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            CachePolicyId: !Ref ServiceWorkerCachePolicy
            OriginRequestPolicyId: !Ref StaticWebsiteOriginRequestPolicy
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: false

        # Distribution Settings
        Enabled: true
        Comment: !Sub 'CDN for Curriculum Alignment System - ${Environment}'
        DefaultRootObject: 'index.html'
        CustomErrorResponses:
          # SPA routing support
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
            ErrorCachingMinTTL: 0
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
            ErrorCachingMinTTL: 0
        
        # Domain Configuration
        Aliases: !If 
          - HasCustomDomain
          - [!Ref DomainName]
          - !Ref 'AWS::NoValue'
        
        ViewerCertificate: !If
          - HasCertificate
          - AcmCertificateArn: !Ref CertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - CloudFrontDefaultCertificate: true
        
        # Geographic Restrictions
        Restrictions:
          GeoRestriction:
            RestrictionType: none
        
        # Price Class
        PriceClass: !Ref PriceClass
        
        # HTTP Version
        HttpVersion: http2
        
        # IPv6
        IPV6Enabled: true
        
        # Logging
        Logging: !If
          - IsProduction
          - Bucket: !Sub '${AWS::StackName}-access-logs.s3.amazonaws.com'
            IncludeCookies: false
            Prefix: 'cloudfront-logs/'
          - !Ref 'AWS::NoValue'

        # Web ACL (for production)
        WebACLId: !If
          - IsProduction
          - !Ref WebACL
          - !Ref 'AWS::NoValue'

      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-distribution'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: curriculum-alignment
        - Key: ManagedBy
          Value: CloudFormation

  # Cache Policies
  ReactAppCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub '${AWS::StackName}-react-app-cache-policy'
        Comment: 'Cache policy for React application'
        DefaultTTL: 86400  # 1 day
        MaxTTL: 31536000   # 1 year
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
          QueryStringsConfig:
            QueryStringBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none

  StaticAssetsCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub '${AWS::StackName}-static-assets-cache-policy'
        Comment: 'Cache policy for static assets (CSS, JS, images)'
        DefaultTTL: 31536000  # 1 year
        MaxTTL: 31536000      # 1 year
        MinTTL: 31536000      # 1 year
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
          QueryStringsConfig:
            QueryStringBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none

  DocumentsCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub '${AWS::StackName}-documents-cache-policy'
        Comment: 'Cache policy for documents and API docs'
        DefaultTTL: 3600   # 1 hour
        MaxTTL: 86400      # 1 day
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
          QueryStringsConfig:
            QueryStringBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none

  ServiceWorkerCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub '${AWS::StackName}-service-worker-cache-policy'
        Comment: 'Cache policy for service worker (no caching)'
        DefaultTTL: 0
        MaxTTL: 0
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: false
          EnableAcceptEncodingBrotli: false
          QueryStringsConfig:
            QueryStringBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none

  # Origin Request Policies
  StaticWebsiteOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Name: !Sub '${AWS::StackName}-static-website-origin-request-policy'
        Comment: 'Origin request policy for static website'
        QueryStringsConfig:
          QueryStringBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - CloudFront-Viewer-Country
            - CloudFront-Is-Mobile-Viewer
        CookiesConfig:
          CookieBehavior: none

  DocumentsOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Name: !Sub '${AWS::StackName}-documents-origin-request-policy'
        Comment: 'Origin request policy for documents'
        QueryStringsConfig:
          QueryStringBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - CloudFront-Viewer-Country
        CookiesConfig:
          CookieBehavior: none

  # Response Headers Policy
  SecurityHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub '${AWS::StackName}-security-headers-policy'
        Comment: 'Security headers for enhanced security'
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 31536000
            IncludeSubdomains: true
            Preload: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: DENY
            Override: true
          ReferrerPolicy:
            ReferrerPolicy: strict-origin-when-cross-origin
            Override: true
          ContentSecurityPolicy:
            ContentSecurityPolicy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';"
            Override: true
        CustomHeadersConfig:
          Items:
            - Header: X-Curriculum-Alignment-Version
              Value: !Sub '${Environment}-1.0.0'
              Override: false
            - Header: Cache-Control
              Value: 'public, max-age=31536000, immutable'
              Override: false

  # Web Application Firewall (Production only)
  WebACL:
    Type: AWS::WAFv2::WebACL
    Condition: IsProduction
    Properties:
      Name: !Sub '${AWS::StackName}-web-acl'
      Description: 'Web ACL for Curriculum Alignment System'
      Scope: CLOUDFRONT
      DefaultAction:
        Allow: {}
      Rules:
        # Rate limiting
        - Name: RateLimitRule
          Priority: 1
          Statement:
            RateBasedStatement:
              Limit: 2000
              AggregateKeyType: IP
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimitRule
        
        # AWS Managed Rules - Core Rule Set
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 2
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CommonRuleSetMetric
        
        # AWS Managed Rules - Known Bad Inputs
        - Name: AWSManagedRulesKnownBadInputsRuleSet
          Priority: 3
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: KnownBadInputsRuleSetMetric

      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${AWS::StackName}-web-acl'

  # CloudWatch Alarms
  DistributionErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-distribution-error-rate'
      AlarmDescription: 'CloudFront distribution error rate is high'
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      AlarmActions:
        - !Ref AlertTopic

  OriginLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-origin-latency'
      AlarmDescription: 'CloudFront origin latency is high'
      MetricName: OriginLatency
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      AlarmActions:
        - !Ref AlertTopic

  # SNS Topic for alerts
  AlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}-cloudfront-alerts'
      DisplayName: 'CloudFront Distribution Alerts'

Outputs:
  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-distribution-id'

  CloudFrontDomainName:
    Description: 'CloudFront Distribution Domain Name'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-domain-name'

  CloudFrontDistributionArn:
    Description: 'CloudFront Distribution ARN'
    Value: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'
    Export:
      Name: !Sub '${AWS::StackName}-distribution-arn'

  WebsiteURL:
    Description: 'Website URL'
    Value: !If
      - HasCustomDomain
      - !Sub 'https://${DomainName}'
      - !Sub 'https://${CloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-website-url'

  AlertTopicArn:
    Description: 'SNS Topic ARN for CloudFront alerts'
    Value: !Ref AlertTopic
    Export:
      Name: !Sub '${AWS::StackName}-alert-topic-arn'

  WebACLArn:
    Condition: IsProduction
    Description: 'Web ACL ARN'
    Value: !GetAtt WebACL.Arn
    Export:
      Name: !Sub '${AWS::StackName}-web-acl-arn'